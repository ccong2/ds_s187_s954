[
  {
    "objectID": "syllabus/index.html",
    "href": "syllabus/index.html",
    "title": "Applied Data Science for Cities",
    "section": "",
    "text": "Description\nUrban data science draws upon statistics, visualization, and computation to better understand and ultimately shape cities. This course emphasizes telling stories about cities using a set of descriptive approaches, quantitative and spatial analysis in R. We will learn how to describe community characteristics with small area census data, work with local administrative data, and think about how our analysis of quantitative data fit with other forms of data and engagement to fill in gaps in knowledge.\nLearning objectives:\n\nGain familiarity with R as a data analysis, mapping, and storytelling tool.\nBe able to identify relevant open datasets in support of your research question.\nArticulate the main arguments for your data analysis product and how it supports planning and decision-making regarding an issue of local/national significance.\n\n\n\nHow Will We Be Learning\nLecture: Class meetings are generally divided into lecture (Mondays) and laboratory sessions (Wednesdays) that focus on concepts and hand-on applications, respectively.\nLab: We will provide data science tutorials using R. Each lab tutorial aims to solve a specific urban data science problem in addition to building coding skills. Lab reports are due before the subsequent lab period and should be written independently.\nExtension readings: We provide a light material list that focuses on specific topics each week. These resources are meant to expand your knowledge and enhance your project completion capabilities.\nUrban data science project: The term project for the course will focus on integrating the tools of data science to explore a specific real-world planning issue or research question. This is a group project and students will define the scope of the project and identify specific deliverable(s) early in the semester. Reproducing an existing analysis or study using different data or an alternate study area is also acceptable for the term project.\n\n\nPrerequisites\nThis is a relatively fast-paced course so students can benefit from some prior knowledge working in R and RStudio. However, this is not a course prerequisite. Our first course sessions will focus on ensuring that we are all familiar with some of the basic work environment and methods which we’ll make use of over the semester.\n\n\nAssessment\n\n\n\n\n\n\n\nAssignment\nWeight\n\n\n\n\nLab Reports\nPackage Introduction\nProject Scope Memo\nProject Presentation\nAttendance\n40%\n10%\n10%\n30%\n10%\n\n\n\n\n\nKey Logistics\nLab Exercises: You will be working on lab on most Wednesday classes and submit a short report before the subsequent class. Details will be specified in each of the assignments distributed at the beginning of the lab session.\nPackage Introduction: Each student is expected to introduce one package to the class that is relevant to your research interests. The objectives are (1) to foster a collaborative approach to acquiring familiarity with the ever-increasing new packages, and (2) to identify valuable existing R packages applicable to your study. A separate guideline will be distributed at the beginning of the course.\nProject Scope Memo: Due Friday, Nov 17.\nThe purpose of this memo is to communicate the scope of your project (what you will do) and your strategies for collecting, visualizing, and analyzing data (how you will do it). A separate guideline will be distributed at the beginning of the course.\nProject Presentation: Week 8 (Dec 11 – Dec 13), class time.\n\n\nLate policy\nTo keep all students on a relatively level playing field, a late assignment will be accepted up until one week after the original due date for a loss of a half-letter grade (e.g., an A becomes an A-). After one week, late assignments will receive no credit and will not be accepted.\n\n\nSoftware\nWe use R and R Studio as the coding environment to develop analysis and applications. You can install the software on your personal computers from here and here.\n\n\nCommunication\nPlan on using our class Slack channel, email, and office hours to get help with troubleshooting problems as they arise in your work. I also encourage you to work with others in the class to troubleshoot problems - it is highly likely that others in the class have encountered similar problems, and this also allows us to create a repository of our problems and responses.\nEmail: I check emails quite frequently, but I will not always be able to respond to emails right away. Please plan accordingly so that you don’t miss deadlines.\nSlack: We have a Slack workspace that is accessible through Canvas for general communication, including homework Q&A, resource exchange, project collaboration, etc.\nOffice hours: Please consult the top of the syllabus for specific times. I will announce if there are any changes or exceptions. I’m happy to answer any specific coding questions, or chat and help shape the objective and scope of your projects.\n\n\nEthics\nAcademic Integrity: Violations to academic integrity are unacceptable at MIT and DUSP. Instances of misconduct include but are not limited to plagiarism, cheating, deliberately unauthorized use of course data and material.\nCollaboration Policy: While team collaboration is encouraged, students should specify their role and tasks in a project. A positive and constructive attitude for teamwork is essential for a successful completion of the course.\nDiversity and Inclusion: MIT highly values a diverse, friendly, respectful, and inclusive learning environment among students, faculty, and staff. We welcome all individuals regardless of their origin, citizenship, gender identity, sexual orientation, religious and pollical beliefs. Please contact me or departmental staff if you have any question / consideration regarding this."
  },
  {
    "objectID": "labs/lab1.html",
    "href": "labs/lab1.html",
    "title": "Get started with ",
    "section": "",
    "text": "This practice exercise provides some more structured exploration and practice with Quarto Document (R Markdown format). We will mix Markdown sections with code chunks, build familiarity with basic data types, and experiment with importing a tabular dataset. Because this is an in-class exercise, there is nothing you need to submit—the goal is to apply what we have read and seen in the lectures."
  },
  {
    "objectID": "labs/lab1.html#select-selects-a-subset-of-columns.",
    "href": "labs/lab1.html#select-selects-a-subset-of-columns.",
    "title": "Get started with ",
    "section": "Select: selects a subset of columns.",
    "text": "Select: selects a subset of columns.\nWhile in base R, we do:\ndataset[, c(\"Column1\", \"Column2\")]\nIn dplyr, we do:\ndataset |&gt; select(Column1, Column2)\nIn other words, we can simply insert the column names into the select function, without worrying about syntax like indexing, concatenation (c()), and the quotation marks.\nIn the energy dataset, we probably don’t need all of the 46 columns. So we can make it a smaller dataset by specifying a few columns to keep. Insert a new code chunk in your document like this one below. Here we are using the pipe |&gt; operator to “chain together” lines of code. You can type this symbol in using Shift+Ctrl/Command+M.\n\nenergy &lt;- energy |&gt;\n  select(\n    `Data Year`,\n    `BEUDO Category`,\n    Owner,\n    `Year Built`,\n    `Primary Property Type - Self Selected`,\n    `Total GHG Emissions (Metric Tons CO2e)`,\n    `Total GHG Emissions Intensity (kgCO2e/ft2)`,\n    Longitude,\n    Latitude\n  ) \n\nSome of the column names are surrounded by backticks (`), that’s because they include special characters or spaces, which deviate from standard naming conventions. The use of backticks is a means of preserving these unique naming attributes. Just keep typing the column names, dplyr will populate the correct names for you."
  },
  {
    "objectID": "labs/lab1.html#filter-select-a-subset-of-rows",
    "href": "labs/lab1.html#filter-select-a-subset-of-rows",
    "title": "Get started with ",
    "section": "filter: Select a subset of rows",
    "text": "filter: Select a subset of rows\nIn base R, we do this to pick observations by their values:\ndataset[dataset$place == “Boston\", ]\nIn dplyr, we do:\ndataset |&gt; filter(place == “Boston\")\nAgain, a simpler and more understandable syntax.\nNow let’s create a new dataset that only contains energy use records from MIT buildings and that are not missing the total GHG emission attribute. Take a look at how we achieve this using the following code, then proceed to insert a new code chunk in your document like the one below:\n\nmit_energy &lt;- energy |&gt; \n  filter(Owner == \"MASSACHUSETTS INSTITUTE OF TECHNOLOGY\") |&gt; \n  filter(!is.na(`Total GHG Emissions (Metric Tons CO2e)`))"
  },
  {
    "objectID": "labs/lab1.html#mutate-create-or-modify-columns",
    "href": "labs/lab1.html#mutate-create-or-modify-columns",
    "title": "Get started with ",
    "section": "mutate: create or modify columns",
    "text": "mutate: create or modify columns\nWe can change the values in a column either based on specified values or certain transformations. For example, below we are showing how to replace the full name of the institute with “MIT”.\n\nmit_energy |&gt; mutate(Owner = \"MIT\")\n\n# A tibble: 891 × 9\n   `Data Year` `BEUDO Category` Owner `Year Built` Primary Property Type - Sel…¹\n         &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;        &lt;dbl&gt; &lt;chr&gt;                        \n 1        2015 Non-Residential  MIT           1994 College/University           \n 2        2017 Residential      MIT           1963 College/University           \n 3        2021 Non-Residential  MIT           2020 Office                       \n 4        2021 Non-Residential  MIT           1983 College/University           \n 5        2017 Non-Residential  MIT           1916 College/University           \n 6        2021 Non-Residential  MIT           1994 College/University           \n 7        2018 Non-Residential  MIT           1931 College/University           \n 8        2021 Non-Residential  MIT           1956 College/University           \n 9        2020 Residential      MIT           1999 Multifamily Housing          \n10        2016 Residential      MIT           1963 College/University           \n# ℹ 881 more rows\n# ℹ abbreviated name: ¹​`Primary Property Type - Self Selected`\n# ℹ 4 more variables: `Total GHG Emissions (Metric Tons CO2e)` &lt;dbl&gt;,\n#   `Total GHG Emissions Intensity (kgCO2e/ft2)` &lt;dbl&gt;, Longitude &lt;dbl&gt;,\n#   Latitude &lt;dbl&gt;\n\n\nYou can also use mutate to add new columns to your data frame that are calculated from existing columns. Here we are showing how to create a new column for building ages.\n\nmit_energy |&gt; mutate(Building_Age = 2023 - `Year Built`)\n\n# A tibble: 891 × 10\n   `Data Year` `BEUDO Category` Owner        `Year Built` Primary Property Typ…¹\n         &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;                 \n 1        2015 Non-Residential  MASSACHUSET…         1994 College/University    \n 2        2017 Residential      MASSACHUSET…         1963 College/University    \n 3        2021 Non-Residential  MASSACHUSET…         2020 Office                \n 4        2021 Non-Residential  MASSACHUSET…         1983 College/University    \n 5        2017 Non-Residential  MASSACHUSET…         1916 College/University    \n 6        2021 Non-Residential  MASSACHUSET…         1994 College/University    \n 7        2018 Non-Residential  MASSACHUSET…         1931 College/University    \n 8        2021 Non-Residential  MASSACHUSET…         1956 College/University    \n 9        2020 Residential      MASSACHUSET…         1999 Multifamily Housing   \n10        2016 Residential      MASSACHUSET…         1963 College/University    \n# ℹ 881 more rows\n# ℹ abbreviated name: ¹​`Primary Property Type - Self Selected`\n# ℹ 5 more variables: `Total GHG Emissions (Metric Tons CO2e)` &lt;dbl&gt;,\n#   `Total GHG Emissions Intensity (kgCO2e/ft2)` &lt;dbl&gt;, Longitude &lt;dbl&gt;,\n#   Latitude &lt;dbl&gt;, Building_Age &lt;dbl&gt;\n\n\nThere is no &lt;- operator in these two code chunks. We are observing the results but the resulting tables are not saved in an object."
  },
  {
    "objectID": "labs/lab1.html#group_by-summarise",
    "href": "labs/lab1.html#group_by-summarise",
    "title": "Get started with ",
    "section": "Group_by + Summarise",
    "text": "Group_by + Summarise\nSummarise is usually used in conjunction with group_by because the latter changes the scope from operating on the entire dataset to operating on it group-by-group. Go ahead and run the following code:\n\nmit_energy |&gt; \n  group_by(`Data Year`) |&gt; \n  summarise(count = n())\n\n# A tibble: 7 × 2\n  `Data Year` count\n        &lt;dbl&gt; &lt;int&gt;\n1        2015   129\n2        2016   134\n3        2017   130\n4        2018   134\n5        2019   111\n6        2020   115\n7        2021   138\n\n\nWe use group_by such that observations (i.e., rows) are grouped according to Data Year, which is the year when the energy record was taken. The result is then passed to summarise to generate a total number of records per year. By default, the n() function creates a new attribute (i.e., column), which we here name as “count”.  \nBelow we are using the same group_by + summarise chain to calculate the average GHG emissions of all buildings, and the average GHG emission intensity (use the column Total GHG Emissions Intensity (kgCO2e/ft2)). Note that we are now giving new names to each of the new columns.\n\nmit_energy |&gt; \n  group_by(year = `Data Year`) |&gt; \n  summarise(count = n(),\n            avg_emission = mean(`Total GHG Emissions (Metric Tons CO2e)`),\n            avg_intensity = mean(`Total GHG Emissions Intensity (kgCO2e/ft2)`))\n\n# A tibble: 7 × 4\n   year count avg_emission avg_intensity\n  &lt;dbl&gt; &lt;int&gt;        &lt;dbl&gt;         &lt;dbl&gt;\n1  2015   129        1585.          13.4\n2  2016   134        1445.          13.3\n3  2017   130        1523.          13.5\n4  2018   134        1472.          13.2\n5  2019   111        1522.          12.8\n6  2020   115        1396.          11.0\n7  2021   138        1415.          11.5\n\n\n\nYour practice\nInsert a few new code chunks below this one to document your code and show your results. \n\nFrom the mit_energy dataset, create a subset of all non-residential buildings, which were built before the year 2000. (Hint: which function would you use?). How many such buildings are there?\nFrom the mit_energy dataset, compare the GHG emissions by property type (Hint: which column has that information?), and generate a table that shows the following results:\n\n\nYou can create this table mostly by modifying the last code chunk (labeled “annual_mean”), however, there are a few small things you can experiment on:\n\nThe calculated average numbers in this table are rounded to 2 decimals, how to achieve that?\nThe table is arranged in descending order based on the “avg_emission” column, how to do that? (Hint)\n\nWe are already trying to ask questions and find hints of interesting stories from the dataset, which is what Exploratory Data Analysis (EDA) is all about. If the results so far look interesting/surprising/expected to you, write a few sentences describing what you see from the analysis.\n\nLastly, we will insert a map to complete your working document! This dataset includes “Longitude” and “Latitude” columns, which I like because it indicates that location information is available and can be visualized.\nAdd the following code to your document, and you should be able to run it and see a map. (If your R says it can’t find mapview, run the line install.packages(\"mapview\"))\n\n\n#install.packages(\"mapview\")\nlibrary(mapview)\nmapview(\n  mit_energy,\n  xcol = \"Longitude\", ycol = \"Latitude\",\n  crs = 4326,\n  grid = FALSE\n)\n\n\n\n\n\n\n\nNow Save, Render your document again. You have now created a pretty, multi-media document using R!\n------\nIn this lab we have introduced how to create and develop a Quarto Document. We have also introduced some commonly-used dplyr funtions including select, filter, mutate, group_by and summarise. This is the beginning of our data wrangling and leads to the work in Week 2."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Applied Data Science for Cities",
    "section": "",
    "text": "Urban science draws on statistics, visualization, and spatial analysis techniques to gain deeper insights into cities and actively contribute to their development. In this course, we’ll dive into the dynamic world of urban science by learning how to tell stories about cities and neighborhoods, covering a range of topics including demographic analysis, health and transportation, and using R as our primary quantitative analysis and interactive visualization tool.\n\n\n\n\n\n\n\nCourse Information\n\nClass Time: M, W: 9:30-11:00 AM\nLocation: Building 9-450\nCanvas Site: https://canvas.mit.edu/courses/23126"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "howto/setupr.html",
    "href": "howto/setupr.html",
    "title": "Applied Data Science for Cities",
    "section": "",
    "text": "Urban analytics draws upon statistics, visualization, and computation to better understand and ultimately shape cities. This course emphasizes telling stories about cities and neighborhoods covering a set of fundamental concepts of descriptive approaches, quantitative and spatial analysis in R, and principles of reproducible data analysis. Students learn to communicate the results of visualization and analysis for use in decision-making and policy development and to critique those processes."
  },
  {
    "objectID": "howto/setupr.html#this-website-is-under-construction-please-check-back-later-for-updates",
    "href": "howto/setupr.html#this-website-is-under-construction-please-check-back-later-for-updates",
    "title": "Applied Data Science for Cities",
    "section": "This website is under construction, please check back later for updates! 😄",
    "text": "This website is under construction, please check back later for updates! 😄"
  },
  {
    "objectID": "labs/index.html",
    "href": "labs/index.html",
    "title": "Schedule Overview",
    "section": "",
    "text": "Schedule\nW01 (Oct 23 - Oct 27):\n\nCourse Overview\nLab1: Cambridge Building Energy: R, Quarto, dplyr essentials\n\nW02 (Oct 30 - Nov 3):\n\nExploratory Data Analysis\nLab 2: Opportunity Zones: tidyverse, ggplot2 packages\n\nW03 (Nov 6 - Nov 10):\n\nCensus Data and Demographic Analysis\nLab 3: Racial Distribution: tidycensus, tidyr packages\n\nW04 (Nov 13 – Nov 17):\n\nCreate interactive graphs and maps\nLab 4: Airbnb in Chicago: plotly and leaflet packages\n\nW05 (Nov 20 – Nov 22):\n\nSpatial Analysis; Obtain data from multiple sources\nLab 5: Obesogenic Built Environment: sf, osmdata packages\n\nW06 (Nov 27 – Dec 1):\n\nWeb Storytelling I\nShiny apps and examples \n\nW07 (Dec 4 – Dec 8):\n\nWeb Storytelling II\nWork on projects\n\nW08 (Dec 11 – Dec 13):\n\nPresentation"
  }
]